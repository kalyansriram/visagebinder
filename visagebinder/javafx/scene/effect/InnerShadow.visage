/*
 * Copyright (c) 2010-2011, Visage Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name Visage nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package visage.javafx.scene.effect;
public class InnerShadow extends Effect{
/**
 * @author Kalyan & SivaBalan <kalyanthedeveloper@gmail.com,sivabalanb.92@gmail.com>
 */
public var changeIsLocal:boolean on replace{
        if(isInitialized(this) or changeIsLocal !=null){
            wrappedInnerShadow.setChangeIsLocal(changeIsLocal);
        }
}
public var radius:DoubleProperty on replace{
        if(isInitialized(this) or radius !=10.0){
            wrappedInnerShadow.setRadius(radius);
        }
}
public var width:DoubleProperty on replace{
        if(isInitialized(this) or width !=21.0){
            wrappedInnerShadow.setWidth(width);
        }
}
public var height:DoubleProperty on replace{
        if(isInitialized(this) or height !=21.0){
            wrappedInnerShadow.setHeight(height);
        }
}
public var blurType:ObjectProperty on replace{
        if(isInitialized(this) or blurType !=THREE_PASS_BOX){
            wrappedInnerShadow.setBlurType(blurType);
        }
}
public var choke:DoubleProperty on replace{
        if(isInitialized(this) or choke !=0.0){
            wrappedInnerShadow.setChoke(choke);
        }
}
public var color:ObjectProperty on replace{
        if(isInitialized(this) or color !=0x000000ff){
            wrappedInnerShadow.setColor(color);
        }
}
public var offsetX:DoubleProperty on replace{
        if(isInitialized(this) or offsetX !=0.0){
            wrappedInnerShadow.setOffsetX(offsetX);
        }
}
public var offsetY:DoubleProperty on replace{
        if(isInitialized(this) or offsetY !=0.0){
            wrappedInnerShadow.setOffsetY(offsetY);
        }
}
}